
import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Progress } from '@/components/ui/progress';
import { VulnerabilityData } from '@/domains/analysis/services/callData';
import { Badge } from '@/components/ui/badge';

interface VulnerabilityCardProps {
  data: VulnerabilityData[];
  selectedType?: string | null;
}

// Consistent color mapping for vulnerability types
const VULNERABILITY_COLORS = {
  "Financial Hardship": "hsl(350, 70%, 55%)",       // chart-5 - red
  "Health Issues": "hsl(230, 85%, 60%)",            // chart-1 - blue
  "Job Loss": "hsl(38, 92%, 50%)",                  // warning - amber
  "Sick/Disability": "hsl(170, 75%, 45%)",          // chart-3 - green
  "Other Issues": "hsl(325, 65%, 50%)"              // chart-6 - pink
};

export const VulnerabilityCard: React.FC<VulnerabilityCardProps> = ({ data, selectedType = null }) => {
  // Filter data if a type is selected
  const displayData = selectedType 
    ? data.filter(item => item.type === selectedType)
    : data;
  
  const total = displayData.reduce((acc, item) => acc + item.count, 0);
  
  return (
    <Card className="h-full">
      <CardHeader>
        <CardTitle className="text-lg font-medium flex items-center gap-2">
          Vulnerability Breakdown
          {selectedType && (
            <Badge variant="outline">
              {selectedType}
            </Badge>
          )}
        </CardTitle>
      </CardHeader>
      <CardContent>
        <div className="space-y-4">
          {displayData.length > 0 ? (
            displayData.map((item) => {
              const percentage = (item.count / total) * 100;
              // Get color based on vulnerability type or fallback to a default
              const color = VULNERABILITY_COLORS[item.type as keyof typeof VULNERABILITY_COLORS] || "hsl(200, 85%, 60%)";
              
              return (
                <div key={item.type} className="space-y-2">
                  <div className="flex justify-between items-center">
                    <span className="text-sm font-medium">{item.type}</span>
                    <span className="text-sm text-muted-foreground">
                      {item.count} ({percentage.toFixed(1)}%)
                    </span>
                  </div>
                  <Progress 
                    value={percentage} 
                    className="h-2" 
                    style={{ 
                      '--progress-background': color,
                      background: 'hsl(var(--muted))'
                    } as React.CSSProperties}
                  />
                </div>
              );
            })
          ) : (
            <div className="text-center py-4 text-muted-foreground">
              No vulnerability data available.
            </div>
          )}
        </div>
      </CardContent>
    </Card>
  );
};
